" color scheme settings
syntax on
set background=dark
colo corvine
set cursorline

" search settings
set hlsearch incsearch

" use spellcheck
set spell spelllang=en_us

" line numbering
set number relativenumber

" disable screen flash
set noerrorbells t_vb=

" sane settings for backspace key
set backspace=indent,eol,start

" enable mouse support
set mouse=a

" terminal title
set title

" persistent undo history
set undofile undodir=~/.cache/vim/undo

" autoindent settings
set smartindent autoindent expandtab

" show tabs as 8 characters
set tabstop=8

" default to using 4 spaces for indentation
set softtabstop=4 shiftwidth=4

" listchars = replace hidden characters with visible ones
set list listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:·

" Jump to the last position when reopening a file
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" disable viminfo for commit msgs
autocmd FileType gitcommit setlocal nobuflisted cc=81 textwidth=80

" use 2-space indentation for C++
autocmd BufRead,BufNewFile *.cpp set softtabstop=2 shiftwidth=2 cindent cc=101 textwidth=100
autocmd BufRead,BufNewFile *.cc set softtabstop=2 shiftwidth=2 cindent cc=101 textwidth=100
autocmd BufRead,BufNewFile *.hpp set softtabstop=2 shiftwidth=2 cindent cc=101 textwidth=100
autocmd BufRead,BufNewFile *.hh set softtabstop=2 shiftwidth=2 cindent cc=101 textwidth=100
" use 4-space indentation Python
autocmd BufRead,BufNewFile *.py set softtabstop=4 shiftwidth=4 cc=101 textwidth=100

" use tabs Makefiles
autocmd BufRead,BufNewFile *Makefile* set noexpandtab cc=101 textwidth=100

" Ruby-specific settings
autocmd BufRead,BufNewFile *.rb set tabstop=2 softtabstop=2 shiftwidth=2 nospell cc=81 textwidth=80
autocmd BufRead,BufNewFile *.fcgi set tabstop=2 softtabstop=2 shiftwidth=2 nospell cc=81 textwidth=80

" Determines whether to use spaces or tabs on the current buffer.
function TabsOrSpaces()
  let numTabs=len(filter(getbufline(bufname("%"), 1, 250), 'v:val =~ "^\\t"'))
  let numSpaces=len(filter(getbufline(bufname("%"), 1, 250), 'v:val =~ "^ "'))

  if numTabs > numSpaces
    set tabstop=8 shiftwidth=8 softtabstop=8 noexpandtab
  else
    set expandtab
  endif
endfunction

autocmd BufReadPost * call TabsOrSpaces()
